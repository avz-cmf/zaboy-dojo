<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<link href="/resource/js/dojo/resources/dojo.css" rel="stylesheet">
<link href="/resource/js/dijit/themes/claro/claro.css" rel="stylesheet">
<link rel="stylesheet" href="/resource/js/dojox/highlight/resources/highlight.css"/>
<link rel="stylesheet" href="/resource/js/dojox/highlight/resources/pygments/colorful.css"/>
<link rel="stylesheet" href="/resource/js/dgrid/css/dgrid.css"/>
<link rel="stylesheet" href="/resource/js/dgrid/css/skins/claro.css"/>
<link rel="stylesheet" href="/resource/js/dgrid/css/skins/claro.css"/>
<link rel="stylesheet" href="/resource/js/dojox/grid/enhanced/resources/claro/EnhancedGrid.css"/>
<link rel="stylesheet" href="/resource/js/dojox/grid/enhanced/resources/EnhancedGrid_rtl.css"/>
<link rel="stylesheet" href="/resource/js/dojo-rql/lib/FilterEditor/resources/css/FilterEditor.css"/>
<body class="claro">
<script>
    var dojoConfig = {
        async: true,
        isDebug: true,
        // This code registers the correct location of the "demo"
        // package so we can load Dojo from the CDN whilst still
        // being able to load local modules
        packages: [
            {
                name: "Rscript",
                location: '/resource/js/dojo-rql/lib'
            },
            {
                name: "dstore",
                location: '/resource/js/dojo-dstore/'
            }
        ]
    };
</script>
<script src="resource/js/dojo/dojo.js"></script>

<div id="grid"></div>
<div id="control-box">
    <div id="newElement">
        <button id="crateElement">Создать элемент</button>
        <button id="gen50Element">Сгенерировать 50 элементов</button>

    </div>
    <div id="deleteElement">
        <button id="deleteElement">Удалить выбраный элемент</button>
        <button id="deleteGen50Element">Удалить все</button>
    </div>
    <div id="util">
        <button id="setFilter">Созать фильтр</button>
        <button id="refresh">Перезагрузить таблицу</button>
    </div>
</div>
<div>
    <h1>Таблица поддерживающая rql фильтрацию</h1>
    <p>В данном примере у нас есть таблциа Users, которя хранит пользователей.
        Мы можем добавить пользователя в ручную - для этого нужно нажать кнопку `Создать элемент`.
        Так же можно сгенерировать 50 пользователей автоматически - нажать кнопку `Создать элемент`.
        Мы так же можем удалить либо выбраного пользователя по id,
        либо удалить сразу всех - нажать кнопки `Удалить выбраный элемент`, `Удалить все` соответсвенно.
        Что бы задать фильтр мы дожны нажать одноименную кнопку `Созать фильтр`. далее в поле rql query
    </p>
</div>

<script>
    require([
        "dojo/dom",
        'dojo/_base/array',
        "dojo/query",
        'dojo/json',
        "rql/query",
        "dijit",
        'dstore/Store',
        'dstore/Memory',
        'dstore/Request',
        'dstore/LocalDB',
        'dstore/Cache',
        'dstore/Tree',
        "dijit/form/Button",
        'dstore/RequestMemory',
        'dstore/extensions/RqlQuery',
        "dstore/Rest",
        'dstore/Trackable',
        "dijit/ConfirmDialog",
        "dijit/form/TextBox",
        "dijit/form/Form",
        "dgrid/OnDemandGrid",
        "dojo/on",
        "dojo/_base/window",
        'dojo/_base/declare',
        'dojo/request',
        'dojo/_base/lang',
        "dojo/dom-style",
        "dojo/domReady!"
    ], function (dom,
                 array,
                 query,
                 json,
                 Query,
                 dijit,
                 Store,
                 Memory,
                 Request,
                 LocalDB,
                 Cache,
                 Tree,
                 Button,
                 RequestMemory,
                 RqlQuery,
                 Rest,
                 Trackable,
                 ConfirmDialog,
                 TextBox,
                 Form,
                 OnDemandGrid,
                 on,
                 window,
                 declare,
                 request,
                 lang,
                 domStyle) {

        var Query = Query.Query;

        var RestRqlStore = declare([Rest, Trackable, RqlQuery]);
        //var RestRqlStore = declare([Rest, Trackable]);

        var restRqlStore = new RestRqlStore({
            "target": "/api/v1/rest/users"
        });

        var form = new Form({
            id: 'form1',
        });
        var grid = new (declare([OnDemandGrid]))({
            collection: restRqlStore,
            columns: {
                name: {
                    label: 'First Name'
                },
                surname: {
                    label: 'Last Name'
                }
            }
        }, 'grid');

        grid.startup();


        new TextBox({
            name: 'name',
            placeHolder: "name",
        }).placeAt(form.containerNode);

        new TextBox({
            name: 'surname',
            placeHolder: "surname",
        }).placeAt(form.containerNode);

        var myDialog = dijit.byId('myDialog');
        if (!myDialog) {
            myDialog = new ConfirmDialog({
                id: 'myDialog1',
                title: 'test dialog',
                content: form,
                style: 'width:600px;',
                execute: function () {
                    var f = query("#form1")[0];
                    restRqlStore.put({
                        "name": f['name'].value,
                        "surname": f['surname'].value
                    });
                }
            });
        }
        form.startup();


        var form2 = new Form({
            id: 'form2',
        });

        new TextBox({
            name: 'id',
            placeHolder: "id",
        }).placeAt(form2.containerNode);

        var myDialog2 = dijit.byId('myDialog2');
        if (!myDialog2) {
            myDialog2 = new ConfirmDialog({
                id: 'myDialog2',
                title: 'test dialog',
                content: form2,
                style: 'width:600px;',
                execute: function () {
                    var f = query("#form2")[0];
                    if(!f['id'].value)
                    {
                        alert("not set id");
                        return ;
                    }
                    restRqlStore.remove(f['id'].value);
                }
            });
        }
        form2.startup();


        var form3 = new Form({
            id: 'form3',
        });

        new TextBox({
            name: 'filter',
            placeHolder: "new Query().eq(\"name\",\"testName0\")",
        }).placeAt(form3.containerNode);

        var myDialog3 = dijit.byId('myDialog3');
        if (!myDialog3) {
            myDialog3 = new ConfirmDialog({
                id: 'myDialog3',
                title: 'test dialog',
                content: form3,
                style: 'width:600px;',
                execute: function () {
                    var f = query("#form3")[0];
                    var filter = eval(f['filter'].value);
                    restRqlStore.filter(filter).forEach(function (product) {
                        alert("name:" + product.name + " surname: " + product.surname);
                    });
                }
            });
        }
        form3.startup();

        on(dom.byId("crateElement"), "click", function () {
            myDialog.show();
        });

        on(dom.byId("deleteElement"), "click", function () {
            myDialog2.show();
        });

        on(dom.byId("setFilter"), "click", function () {
            myDialog3.show();
        });

        on(dom.byId("refresh"), "click", function () {

        });

        on(dom.byId("gen50Element"), "click", function () {
            for (var i = 0; i< 50; ++i)
            {
                restRqlStore.put({
                    "name": "testName" + i,
                    "surname": "testSurname" + i
                });
            }
        });
        on(dom.byId("deleteGen50Element"), "click", function () {
            for (var i = 0; i< 50; ++i)
            {
                restRqlStore.forEach(function (item) {
                    restRqlStore.remove(item.id);
                });
            }
        });

        grid.startup();
    })
</script>
</body>
</html>